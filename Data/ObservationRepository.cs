using System.Data.SQLite;
using assignment_sql_81clafra.Models;

namespace assignment_sql_81clafra.Data
{
    public class ObservationRepository
    {
        // Implementera CRUD-metoder här
        // Create, GetAll, GetById, Update, Delete

        // Corrected with help from Perplexity, https://www.perplexity.ai/search/why-do-i-get-this-error-messag-OnsK_24mQm.TzjLBsttzgQ#0
        public void CreateObservation(Models.Observation observation)
        {
            // 1. Skapa SQL-frågan med PARAMETRAR (inte string concatenation!)
            // Tipset: INSERT INTO Personer (Namn, Ålder) VALUES (@namn, @ålder)
            // 2. Öppna connection, skapa command, lägg till parametrar, kör ExecuteNonQuery()
            using SQLiteConnection connection = DatabaseConnection.GetConnection(); // Generated with help from Perplexity, https://www.perplexity.ai/search/why-do-i-get-this-error-messag-Qt5RQfY7Swmk189g7bwlhw#0 

            string sqlCommandText = "INSERT INTO Observation (MonsterId, LocationId, HunterId, Description, DateSeen) VALUES (@monsterid, @locationid, @hunterid, @description, @dateseen)";

            using var sqlCommand = new SQLiteCommand(sqlCommandText, connection);
            sqlCommand.Parameters.AddWithValue("@monsterid", observation.MonsterId);
            sqlCommand.Parameters.AddWithValue("@locationid", observation.LocationId);
            sqlCommand.Parameters.AddWithValue("@hunterid", observation.HunterId);
            sqlCommand.Parameters.AddWithValue("@description", observation.Description);
            sqlCommand.Parameters.AddWithValue("@dateseen", observation.DateSeen);

            sqlCommand.ExecuteNonQuery();
        }

        public List<Observation> ReadAllObservations()
        {

            using SQLiteConnection connection = DatabaseConnection.GetConnection(); // Generated with help from Perplexity, https://www.perplexity.ai/search/why-do-i-get-this-error-messag-Qt5RQfY7Swmk189g7bwlhw#0 

            // 1. Skapa SQL-frågan
            // Tipset: SELECT Id, Namn, Ålder FROM Personer
            string sqlCommandText = "SELECT Id, MonsterId, LocationId, HunterId, Description, DateSeen FROM Observation"; //  Generated with help from TabbyML/Qwen2.5-Coder-7B-Instruct

            // 2. Öppna connection och skapa command

            // Generated with help from TabbyML/Qwen2.5-Coder-7B-Instruct
            using SQLiteCommand command = connection.CreateCommand();
            command.CommandText = sqlCommandText;

            // 3. Använd ExecuteReader() för att få tillbaka en SQLiteDataReader
            // ExecuteReader() ger oss något som heter en "DataReader"
            // Det är som en pekare som går igenom alla rader i resultatet
            using SQLiteDataReader reader = command.ExecuteReader();

            List<Observation> observations = new List<Observation>();

            // 4. Loopa igenom resultatet med while (reader.Read())
            // reader.Read() flyttar fram pekaren till nästa rad och returnerar true om det finns fler rader
            while (reader.Read()) // Generated by TabbyML/Qwen2.5-Coder-7B-Instruct
            {

                // 5. För varje rad, läs ut värdena:
                // - reader.GetInt32(0) ger första kolumnen som int (Id)
                // - reader.GetString(1) ger andra kolumnen som string (Namn)
                // - reader.GetInt32(2) ger tredje kolumnen som int (Ålder)
                // Generated by TabbyML/Qwen2.5-Coder-7B-Instruct
                int id = reader.GetInt32(0);
                int monsterId = reader.GetInt32(1);
                int locationId = reader.GetInt32(2);
                int hunterId = reader.GetInt32(3);
                string description = reader.GetString(4);
                string dateSeen = reader.GetString(5);

                // 6. Skapa ett Observation-objekt och lägg det i listan
                Observation observation = new Observation(id, monsterId, locationId, hunterId, description, dateSeen);
                observations.Add(observation);
            }

            // TIPS: Glöm inte att stänga reader när du är klar!
            // Eller använd 'using' för att det ska hända automatiskt.

            return observations;
        }

        public void UpdateObservation(Observation observationToUpdate)
        {
            // 1. Skapa SQL-frågan med parametrar
            // Tipset: UPDATE Personer SET Namn = @namn, Ålder = @ålder WHERE Id = @id
            string sqlCommandText = "UPDATE Observation SET MonsterId = @monsterid, LocationId = @locationid, HunterId = @hunterid, Description = @description, DateSeen = @dateseen WHERE Id = @id";

            // 2. Öppna connection, skapa command, lägg till parametrar, kör ExecuteNonQuery()
            using SQLiteConnection connection = DatabaseConnection.GetConnection(); // Generated with help fron Perplexity, https://www.perplexity.ai/search/why-do-i-get-this-error-messag-Qt5RQfY7Swmk189g7bwlhw#0 

            using (SQLiteCommand command = connection.CreateCommand()) // Generated with help from TabbyML/Qwen2.5-Coder-7B-Instruct
            {
                command.CommandText = sqlCommandText;

                // Generated by TabbyML/Qwen2.5-Coder-7B-Instruct
                command.Parameters.AddWithValue("@monsterid", observationToUpdate.MonsterId);
                command.Parameters.AddWithValue("@locationid", observationToUpdate.LocationId);
                command.Parameters.AddWithValue("@hunterid", observationToUpdate.HunterId);
                command.Parameters.AddWithValue("@description", observationToUpdate.Description);
                command.Parameters.AddWithValue("@dateseen", observationToUpdate.DateSeen);
                command.Parameters.AddWithValue("@id", observationToUpdate.Id);

                // 3. ExecuteNonQuery() returnerar antalet påverkade rader
                // Om det är 0 betyder det att inget hittades med det Id:t

                int affectedRows = command.ExecuteNonQuery();

            }
        }

        public void DeleteObservation(Observation observation)
        {
            // 1. Skapa SQL-frågan med parameter
            // Tipset: DELETE FROM Personer WHERE Id = @id
            string sqlCommandText = "DELETE FROM Observation WHERE Id = @id"; // Generated with help from TabbyML/Qwen2.5-Coder-7B-Instruct

            // 2. Öppna connection, skapa command, lägg till parameter, kör ExecuteNonQuery()

            using SQLiteConnection connection = DatabaseConnection.GetConnection(); // Generated with help fron Perplexity, https://www.perplexity.ai/search/why-do-i-get-this-error-messag-Qt5RQfY7Swmk189g7bwlhw#0 
            {
                using (SQLiteCommand command = connection.CreateCommand()) // Generated with help from TabbyML/Qwen2.5-Coder-7B-Instruct
                {
                    command.CommandText = sqlCommandText;

                    command.Parameters.AddWithValue("@id", observation.Id); // Generated by TabbyML/Qwen2.5-Coder-7B-Instruct

                    command.ExecuteNonQuery();
                }
            }
        }
    }
}